{"version":3,"sources":["blockchain/Blockchain.js","blockchain/Block.js","serviceWorker.js","theme.js","components/navigation/Navbar.js","components/wallet/Balance.js","blockchain/generateKeyPair.js","components/wallet/CreateWallet.js","components/utils/HighlightedInformation.js","components/wallet/MakeTransaction.js","components/wallet/Wallet.js","components/utils/BlockPaper.js","components/explorer/Explorer.js","components/mine/Mine.js","App.js","index.js","blockchain/Transaction.js","blockchain/jsonToBlockchain.js"],"names":["Transaction","require","Block","Blockchain","difficulty","updateChain","timestamp","needsNewBlock","this","genesisBlock","createGenesisBlock","Date","now","chain","pendingTransactions","miningReward","length","miningRewardAddress","rewardTx","txs","i","tx","isValid","hasEnoughCoins","push","curBlock","getLatestBlock","hash","index","mineBlock","transaction","amount","getBalanceOfAddress","fromAddress","toAddress","Error","address","balance","block","transactions","trans","realGenesis","JSON","stringify","currentBlock","hasValidTransactions","console","log","calculateHash","module","exports","SHA256","previousHash","nonce","txStr","toString","maxCounter","counter","substring","Array","join","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","theme","createMuiTheme","palette","primary","main","secondary","contrastThreshold","tonalOffset","typography","useNextVariants","withWidth","withStyles","logo","flexGrow","fontFamily","fontWeight","marginRight","spacing","menuLink","textDecoration","color","common","white","withTheme","props","classes","switchTab","width","AppBar","position","Toolbar","Typography","variant","isWidthDown","className","Button","size","onClick","Balance","coins","pk","checkBalance","blockchain","setState","paragraph","TextField","value","fullWidth","margin","onChange","event","target","multiline","label","InputProps","readOnly","button","disabled","PureComponent","marginTop","EC","ec","generateKeyPair","key","genKeyPair","getPublic","sk","getPrivate","CreateWallet","createWallet","pair","backgroundColor","border","padding","borderRadius","shape","children","classNames","recPk","status","makeTransaction","parseInt","signTransaction","addTransaction","e","message","isNaN","HighlightedInformation","highLightedInformation","Wallet","activeMenu","printContent","MakeTransaction","flexBox","rightMargin","contentWrapper","display","bordered","overflowX","prevHash","style","marginBottom","map","signature","Explorer","page","pageSize","onPaginationChange","_","slicedChain","reverse","slice","pageCount","Math","ceil","Paper","paper","element","Box","mb","mt","justifyContent","Pagination","count","defaultPage","Mine","mining","startMining","a","validateChain","minePendingTransactions","setTimeout","initMiningLoop","stopMiningLoop","curBlockPaper","App","selectedTab","fetchBlochchain","ajax","XMLHttpRequest","open","onload","jsonToBlockchain","responseText","send","copyChain","Promise","resolve","reject","formData","FormData","append","onerror","Grid","container","justify","item","xs","md","leftContent","paperPaddingLeft","maxWidth","paddingLeft","paddingRight","breakpoints","down","ReactDOM","render","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","secp256k1","privKey","keyFromPrivate","hashTx","sig","sign","toDER","keyFromPublic","verify","jsonString","blockchainDec","parse","curTx"],"mappings":"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","file":"static/js/main.990db307.chunk.js","sourcesContent":["const Transaction = require(\"./Transaction\");\r\nconst Block = require(\"./Block\");\r\n\r\nclass Blockchain {\r\n  constructor(difficulty, updateChain = false, timestamp = false) {\r\n    this.updateChain = updateChain;\r\n    const genesisBlock = this.createGenesisBlock(\r\n      timestamp ? timestamp : Date.now()\r\n    );\r\n    if (this.updateChain) {\r\n      this.updateChain([genesisBlock]);\r\n    }\r\n    this.chain = [genesisBlock];\r\n    this.difficulty = difficulty;\r\n    this.pendingTransactions = [];\r\n    this.miningReward = 1000;\r\n  }\r\n\r\n  needsNewBlock = true;\r\n\r\n  createGenesisBlock(timestamp) {\r\n    return new Block(timestamp, [], \"\", 0);\r\n  }\r\n\r\n  getLatestBlock() {\r\n    return this.chain[this.chain.length - 1];\r\n  }\r\n\r\n  minePendingTransactions(miningRewardAddress) {\r\n    const rewardTx = new Transaction(\r\n      null,\r\n      miningRewardAddress,\r\n      this.miningReward\r\n    );\r\n    if (this.needsNewBlock || this.pendingTransactions.length > 0) {\r\n      const txs = [];\r\n      for (var i = 0; i < this.pendingTransactions.length; i++) {\r\n        let tx = this.pendingTransactions[i];\r\n        if (tx.isValid() && this.hasEnoughCoins(tx)) {\r\n          txs.push(tx);\r\n        }\r\n      }\r\n      txs.push(rewardTx);\r\n      this.curBlock = new Block(\r\n        Date.now(),\r\n        txs,\r\n        this.getLatestBlock().hash,\r\n        this.getLatestBlock().index + 1\r\n      );\r\n      this.pendingTransactions = [];\r\n      this.needsNewBlock = false;\r\n    }\r\n    if (!this.curBlock.mineBlock(this.difficulty, 150)) {\r\n      return false;\r\n    }\r\n    this.chain.push(this.curBlock);\r\n    if (this.updateChain) {\r\n      this.updateChain(this.chain);\r\n    }\r\n    this.pendingTransactions = [];\r\n    this.needsNewBlock = true;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Prevent's transactions from wallets which have\r\n   * insufficient coins\r\n   */\r\n  hasEnoughCoins(transaction) {\r\n    if (\r\n      transaction.amount > this.getBalanceOfAddress(transaction.fromAddress)\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addTransaction(transaction) {\r\n    if (!transaction.fromAddress || !transaction.toAddress) {\r\n      throw new Error(\"Transaction must include from and to address\");\r\n    }\r\n\r\n    if (!transaction.isValid()) {\r\n      throw new Error(\"Cannot add invalid transaction to chain\");\r\n    }\r\n\r\n    if (transaction.amount <= 0) {\r\n      throw new Error(\"Transaction amount should be higher than 0\");\r\n    }\r\n\r\n    this.pendingTransactions.push(transaction);\r\n  }\r\n\r\n  getBalanceOfAddress(address) {\r\n    let balance = 0;\r\n\r\n    for (const block of this.chain) {\r\n      for (const trans of block.transactions) {\r\n        if (trans.fromAddress === address) {\r\n          balance -= trans.amount;\r\n        }\r\n\r\n        if (trans.toAddress === address) {\r\n          balance += trans.amount;\r\n        }\r\n      }\r\n    }\r\n\r\n    return balance;\r\n  }\r\n\r\n  getAllTransactionsForWallet(address) {\r\n    const txs = [];\r\n\r\n    for (const block of this.chain) {\r\n      for (const tx of block.transactions) {\r\n        if (tx.fromAddress === address || tx.toAddress === address) {\r\n          txs.push(tx);\r\n        }\r\n      }\r\n    }\r\n\r\n    return txs;\r\n  }\r\n\r\n  isChainValid() {\r\n    const realGenesis = this.createGenesisBlock(this.chain[0].timestamp);\r\n    realGenesis.timestamp = this.chain[0].timestamp;\r\n    if (JSON.stringify(realGenesis) !== JSON.stringify(this.chain[0])) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 1; i < this.chain.length; i++) {\r\n      const currentBlock = this.chain[i];\r\n\r\n      if (!currentBlock.hasValidTransactions()) {\r\n        console.log(\"Invalid transactions\");\r\n        return false;\r\n      }\r\n\r\n      if (currentBlock.hash !== currentBlock.calculateHash()) {\r\n        console.log(\"Invalid hash\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nmodule.exports = Blockchain;\r\n","const SHA256 = require(\"crypto-js/sha256\");\r\n\r\nclass Block {\r\n  constructor(timestamp, transactions, previousHash = \"\", index = 0) {\r\n    this.previousHash = previousHash;\r\n    this.timestamp = timestamp;\r\n    this.transactions = transactions;\r\n    this.nonce = 0;\r\n    this.index = index;\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  calculateHash() {\r\n    let txStr = \"\";\r\n    if (this.transactions) {\r\n      for (const tx of this.transactions) {\r\n        txStr += tx.calculateHash();\r\n      }\r\n    }\r\n    return SHA256(\r\n      this.previousHash + this.timestamp + txStr + this.nonce + this.index\r\n    ).toString();\r\n  }\r\n\r\n  mineBlock(difficulty, maxCounter = false) {\r\n    let counter = 0;\r\n    while (\r\n      this.hash.substring(0, difficulty) !== Array(difficulty + 1).join(\"0\")\r\n    ) {\r\n      if (maxCounter && counter > maxCounter) {\r\n        return false;\r\n      }\r\n      this.nonce++;\r\n      counter++;\r\n      this.hash = this.calculateHash();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  hasValidTransactions() {\r\n    for (const tx of this.transactions) {\r\n      if (!tx.isValid()) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nmodule.exports = Block;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nconst primary = \"#b3294e\";\r\nconst secondary = \"#4829B2\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: primary },\r\n    secondary: { main: secondary },\r\n    // Used by `getContrastText()` to maximize the contrast between the background and\r\n    // the text.\r\n    contrastThreshold: 3,\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  isWidthDown,\r\n  withStyles,\r\n  withWidth\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  logo: {\r\n    flexGrow: 1,\r\n    fontFamily: \"Rubik\",\r\n    fontWeight: 700\r\n  },\r\n  marginRight: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  menuLink: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.common.white\r\n  }\r\n});\r\n\r\nfunction Navbar(props) {\r\n  const { classes, switchTab, width } = props;\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography\r\n          variant={isWidthDown(\"sm\", width) ? \"h6\" : \"h5\"}\r\n          color=\"inherit\"\r\n          className={classes.logo}\r\n        >\r\n          Centralia Coin\r\n        </Typography>\r\n        <Button\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          className={classes.marginRight}\r\n          onClick={() => {\r\n            switchTab(\"Wallet\");\r\n          }}\r\n        >\r\n          Wallet\r\n        </Button>\r\n        <Button\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            switchTab(\"Mine\");\r\n          }}\r\n        >\r\n          Mine\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  switchTab: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(Navbar));\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { Typography, TextField, Button, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n});\r\n\r\nclass Balance extends PureComponent {\r\n  state = { coins: \"\", pk: \"\" };\r\n  checkBalance = () => {\r\n    const { blockchain } = this.props;\r\n    const { pk } = this.state;\r\n    this.setState({ coins: blockchain.getBalanceOfAddress(pk) });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, coins } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Enter the public key of a wallet to find out it's balance\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Public Key\"\r\n        />\r\n        <TextField\r\n          value={coins}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"Coins\"\r\n        />\r\n        <Button\r\n          fullWidth\r\n          onClick={this.checkBalance}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          disabled={!pk}\r\n        >\r\n          Check Balance\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Balance);\r\n","var EC = require(\"elliptic\").ec;\r\n\r\nfunction generateKeyPair() {\r\n  const ec = new EC(\"secp256k1\");\r\n  const key = ec.genKeyPair();\r\n  return { pk: key.getPublic(\"hex\"), sk: key.getPrivate(\"hex\") };\r\n}\r\n\r\nexport default generateKeyPair;\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { Typography, TextField, Button, withStyles } from \"@material-ui/core\";\r\nimport generateKeyPair from \"../../blockchain/generateKeyPair\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n});\r\n\r\nclass CreateWallet extends PureComponent {\r\n  state = { pk: \"\", sk: \"\" };\r\n\r\n  createWallet = () => {\r\n    const pair = generateKeyPair();\r\n    this.setState({ pk: pair.pk, sk: pair.sk });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, sk } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Generate a keypair\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"Public Key\"\r\n        />\r\n        <TextField\r\n          value={sk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"Private Key\"\r\n        />\r\n        <Button\r\n          fullWidth\r\n          onClick={this.createWallet}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n        >\r\n          Generate Wallet\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(CreateWallet);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport classNames from \"classnames\";\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    backgroundColor: \"rgba(253, 200, 69, .2)\",\r\n    border: \"2px solid rgba(253, 200, 69, .4)\",\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n});\r\n\r\nfunction HighlighedInformation(props) {\r\n  const { className, children, classes } = props;\r\n  return (\r\n    <div className={classNames(classes.main, className ? className : null)}>\r\n      <Typography>{children}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHighlighedInformation.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n    PropTypes.array\r\n  ]),\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { Typography, TextField, Button, withStyles } from \"@material-ui/core\";\r\nimport HighlightedInformation from \"../utils/HighlightedInformation\";\r\nconst Transaction = require(\"../../blockchain/Transaction\");\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  highLightedInformation: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n});\r\n\r\nclass Balance extends PureComponent {\r\n  state = { pk: \"\", sk: \"\", coins: \"\", recPk: \"\", status: null };\r\n\r\n  makeTransaction = () => {\r\n    this.setState({ status: null });\r\n    const { blockchain } = this.props;\r\n    const { pk, recPk, sk, coins } = this.state;\r\n    const transaction = new Transaction(pk, recPk, parseInt(coins));\r\n    try {\r\n      transaction.signTransaction(pk, sk);\r\n      blockchain.addTransaction(transaction);\r\n      this.setState({\r\n        status: \"Transaction will be in the next block if it's valid\"\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      if (\r\n        e.message === \"Cannot add invalid transaction to chain\" ||\r\n        e.message === \"You cannot sign transactions for other wallets!\"\r\n      ) {\r\n        this.setState({ status: e.message });\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, sk, coins, recPk, status } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Transfer coins from one wallet to another\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Your wallets public key\"\r\n        />\r\n        <TextField\r\n          value={sk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ sk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Your wallets private key\"\r\n        />\r\n        <TextField\r\n          value={recPk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ recPk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"The recipient's wallet public key\"\r\n        />\r\n        <TextField\r\n          value={coins}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            const { value } = event.target;\r\n            if (isNaN(value)) {\r\n              return;\r\n            }\r\n            this.setState({ coins: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Coins to send\"\r\n        />\r\n        {status && (\r\n          <HighlightedInformation className={classes.highLightedInformation}>\r\n            {status}\r\n          </HighlightedInformation>\r\n        )}\r\n        <Button\r\n          className={classes.button}\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={!pk || !sk || !recPk || !coins}\r\n          onClick={this.makeTransaction}\r\n        >\r\n          Create Transaction\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Balance);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, withStyles } from \"@material-ui/core\";\r\nimport Balance from \"./Balance\";\r\nimport CreateWallet from \"./CreateWallet\";\r\nimport MakeTransaction from \"./MakeTransaction\";\r\n\r\nconst styles = theme => ({\r\n  flexBox: {\r\n    display: \"flex\"\r\n  },\r\n  rightMargin: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  contentWrapper: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n});\r\n\r\nclass Wallet extends PureComponent {\r\n  state = {\r\n    activeMenu: \"Create Wallet\"\r\n  };\r\n\r\n  printContent = () => {\r\n    const { blockchain } = this.props;\r\n    const { activeMenu } = this.state;\r\n    switch (activeMenu) {\r\n      case \"Create Wallet\":\r\n        return <CreateWallet />;\r\n      case \"Balance\":\r\n        return <Balance blockchain={blockchain} />;\r\n      case \"Make Transaction\":\r\n        return <MakeTransaction blockchain={blockchain} />;\r\n      default:\r\n        throw new Error(\"No branch selected in switcht statement.\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { activeMenu } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.flexBox}>\r\n          <Button\r\n            className={classes.rightMargin}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Create Wallet\" });\r\n            }}\r\n            variant={activeMenu === \"Create Wallet\" ? \"outlined\" : \"text\"}\r\n            color=\"primary\"\r\n          >\r\n            Create Wallet\r\n          </Button>\r\n          <Button\r\n            className={classes.rightMargin}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Balance\" });\r\n            }}\r\n            variant={activeMenu === \"Balance\" ? \"outlined\" : \"text\"}\r\n            color=\"primary\"\r\n          >\r\n            Balance\r\n          </Button>\r\n          <Button\r\n            variant={activeMenu === \"Make Transaction\" ? \"outlined\" : \"text\"}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Make Transaction\" });\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Make Transaction\r\n          </Button>\r\n        </div>\r\n        <div className={classes.contentWrapper}>{this.printContent()}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nWallet.propTypes = {\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Wallet);\r\n","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  bordered: {\r\n    border: \"2px solid rgba(0, 0, 0, 0.13)\",\r\n    overflowX: \"hidden\",\r\n    padding: theme.spacing(1)\r\n  }\r\n});\r\n\r\nfunction BlockPaper(props) {\r\n  const {\r\n    hash,\r\n    prevHash,\r\n    transactions,\r\n    index,\r\n    nonce,\r\n    classes,\r\n    timestamp,\r\n    theme\r\n  } = props;\r\n  return (\r\n    <div className={classes.bordered}>\r\n      <Typography variant=\"body1\">\r\n        <b>Index:</b> {index}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Previous hash:</b> {prevHash}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Hash:</b> {hash}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Nonce:</b> {nonce}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Timestamp:</b> {timestamp}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\"\r\n        style={{\r\n          marginBottom: transactions.length >= 1 ? theme.spacing(1) : 0\r\n        }}\r\n      >\r\n        <b>Transactions:</b>\r\n      </Typography>\r\n      {transactions.map((tx, index) => (\r\n        <div className={classes.bordered} key={index}>\r\n          <Typography>\r\n            <b>From address:</b>{\" \"}\r\n            {tx.fromAddress ? tx.fromAddress : \"Mining reward\"}\r\n          </Typography>\r\n          <Typography>\r\n            <b>To address:</b> {tx.toAddress}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Signature:</b> {tx.signature ? tx.signature : \"Mining reward\"}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Coins:</b> {tx.amount}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Timestamp:</b> {tx.timestamp}\r\n          </Typography>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(BlockPaper);\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport BlockPaper from \"../utils/BlockPaper\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    marginBottom: theme.spacing(4)\r\n  }\r\n});\r\n\r\nclass Explorer extends PureComponent {\r\n  state = { page: 1 };\r\n  pageSize = 10;\r\n\r\n  onPaginationChange = (_, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  render() {\r\n    const { chain, classes } = this.props;\r\n    const { page } = this.state;\r\n    const slicedChain = [...chain]\r\n      .reverse()\r\n      .slice((page - 1) * this.pageSize, page * this.pageSize);\r\n    const pageCount = Math.ceil(chain.length / this.pageSize);\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <Typography paragraph variant=\"h6\">\r\n          The blockchain\r\n        </Typography>\r\n        {slicedChain.map((element, index) => (\r\n          <Box\r\n            mb={index !== slicedChain.length - 1 ? 1 : 0}\r\n            key={element.index}\r\n          >\r\n            <BlockPaper\r\n              index={element.index}\r\n              prevHash={element.previousHash}\r\n              hash={element.hash}\r\n              nonce={element.nonce}\r\n              timestamp={element.timestamp}\r\n              transactions={element.transactions}\r\n            />\r\n            {index !== slicedChain.length - 1 && (\r\n              <Box mt={1} display=\"flex\" justifyContent=\"center\">\r\n                <ArrowUpward></ArrowUpward>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        ))}\r\n        <Box mt={2}>\r\n          <Pagination\r\n            disabled={pageCount === 1}\r\n            count={pageCount}\r\n            defaultPage={1}\r\n            page={page}\r\n            onChange={this.onPaginationChange}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nExplorer.propTypes = {\r\n  chain: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Explorer);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, TextField, Button, withStyles } from \"@material-ui/core\";\r\nimport BlockPaper from \"../utils/BlockPaper\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  curBlockPaper: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n});\r\n\r\nclass Mine extends PureComponent {\r\n  state = { pk: \"\", hash: \"\", mining: false, transactions: [] };\r\n\r\n  startMining = async () => {\r\n    const { blockchain, validateChain } = this.props;\r\n    const { pk, mining } = this.state;\r\n    const minedNewBlock = blockchain.minePendingTransactions(pk);\r\n    if (minedNewBlock) {\r\n      await validateChain();\r\n    }\r\n    const { curBlock } = blockchain;\r\n    this.setState({\r\n      index: curBlock.index,\r\n      prevHash: curBlock.previousHash,\r\n      hash: curBlock.hash,\r\n      nonce: curBlock.nonce,\r\n      timestamp: curBlock.timestamp,\r\n      transactions: curBlock.transactions\r\n    });\r\n    if (mining) {\r\n      window.setTimeout(this.startMining, 10);\r\n    }\r\n  };\r\n\r\n  initMiningLoop = () => {\r\n    this.setState({ mining: true }, this.startMining);\r\n  };\r\n\r\n  stopMiningLoop = () => {\r\n    this.setState({ mining: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const {\r\n      pk,\r\n      mining,\r\n      index,\r\n      prevHash,\r\n      hash,\r\n      nonce,\r\n      timestamp,\r\n      transactions\r\n    } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Mine blocks to get coins\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          multiline\r\n          label=\"Public key of wallet to reward\"\r\n        />\r\n        {mining && (\r\n          <Fragment>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{ marginTop: theme.spacing(1) }}\r\n              paragraph\r\n            >\r\n              Current block\r\n            </Typography>\r\n            <div className={classes.curBlockPaper}>\r\n              <BlockPaper\r\n                index={index}\r\n                hash={hash}\r\n                prevHash={prevHash}\r\n                nonce={nonce}\r\n                timestamp={timestamp}\r\n                transactions={transactions}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n        <Button\r\n          fullWidth\r\n          onClick={mining ? this.stopMiningLoop : this.initMiningLoop}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          disabled={!pk}\r\n        >\r\n          {mining ? \"Stop Mining\" : \"Start Mining\"}\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMine.propTypes = {\r\n  blockchain: PropTypes.object,\r\n  validateChain: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Mine);\r\n","import React, { Fragment, PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paper, Grid, withStyles } from \"@material-ui/core\";\r\nimport Navbar from \"./components/navigation/Navbar\";\r\nimport Wallet from \"./components/wallet/Wallet\";\r\nimport Explorer from \"./components/explorer/Explorer\";\r\nimport Mine from \"./components/mine/Mine\";\r\nimport jsonToBlockchain from \"./blockchain/jsonToBlockchain\";\r\nconst Blockchain = require(\"./blockchain/Blockchain\");\r\n\r\nconst styles = theme => ({\r\n  contentWrapper: {\r\n    maxWidth: 1600,\r\n    width: \"100%\",\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    }\r\n  },\r\n  flexBox: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n  paperPaddingLeft: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\"\r\n  },\r\n  leftContent: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginBottom: theme.spacing(3)\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginBottom: theme.spacing(1)\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends PureComponent {\r\n  state = {\r\n    blockchain: null,\r\n    chain: [],\r\n    selectedTab: \"Wallet\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchBlochchain();\r\n  }\r\n\r\n  fetchBlochchain = () => {\r\n    const ajax = new XMLHttpRequest();\r\n    ajax.open(\r\n      \"GET\",\r\n      `https://h2867975.stratoserver.net/centralia-coin/get-blockchain?cb=${Date.now()}`\r\n    );\r\n    ajax.onload = () => {\r\n      const blockchain = jsonToBlockchain(ajax.responseText, this.updateChain);\r\n      if (blockchain.chain.length > 0) {\r\n        console.log(\"valid chain came back\");\r\n        this.setState({ blockchain: blockchain, chain: blockchain.chain });\r\n      } else {\r\n        console.log(\"invalid chain came back\");\r\n        this.setState({\r\n          blockchain: new Blockchain(4, this.updateChain)\r\n        });\r\n      }\r\n    };\r\n    ajax.send();\r\n  };\r\n\r\n  updateChain = chain => {\r\n    const copyChain = [...chain];\r\n    this.setState({ chain: copyChain });\r\n  };\r\n\r\n  validateChain = async () => {\r\n    return new Promise((resolve, reject) => {\r\n      const { chain } = this.state;\r\n      const ajax = new XMLHttpRequest();\r\n      const formData = new FormData();\r\n      formData.append(\"blockchain\", JSON.stringify(chain));\r\n      ajax.open(\r\n        \"POST\",\r\n        \"https://h2867975.stratoserver.net/centralia-coin/add-block\"\r\n      );\r\n      ajax.onload = () => {\r\n        const blockchain = jsonToBlockchain(\r\n          ajax.responseText,\r\n          this.updateChain\r\n        );\r\n        this.setState({ blockchain: blockchain, chain: blockchain.chain });\r\n        resolve();\r\n      };\r\n      ajax.onerror = reject;\r\n      ajax.send(formData);\r\n    });\r\n  };\r\n\r\n  printContent = () => {\r\n    const { selectedTab, blockchain } = this.state;\r\n    switch (selectedTab) {\r\n      case \"Wallet\":\r\n        return <Wallet blockchain={blockchain} />;\r\n      case \"Mine\":\r\n        return (\r\n          <Mine blockchain={blockchain} validateChain={this.validateChain} />\r\n        );\r\n      default:\r\n        throw new Error(\"No branch selected in switch statement\");\r\n    }\r\n  };\r\n\r\n  switchTab = selectedTab => {\r\n    this.setState({ selectedTab });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { chain } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Navbar switchTab={this.switchTab} />\r\n        <div className={classes.flexBox}>\r\n          <div className={classes.contentWrapper}>\r\n            <Grid container justify=\"space-between\">\r\n              <Grid item xs={12} md={7} className={classes.leftContent}>\r\n                <Paper className={classes.paperPaddingLeft}>\r\n                  {this.printContent()}\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Explorer chain={chain} />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","const SHA256 = require(\"crypto-js/sha256\");\r\nconst EC = require(\"elliptic\").ec;\r\nconst secp256k1 = new EC(\"secp256k1\");\r\n\r\nclass Transaction {\r\n  constructor(fromAddress, toAddress, amount) {\r\n    this.fromAddress = fromAddress;\r\n    this.toAddress = toAddress;\r\n    this.amount = amount;\r\n    this.timestamp = Date.now();\r\n  }\r\n\r\n  calculateHash() {\r\n    return SHA256(\r\n      this.fromAddress + this.toAddress + this.amount + this.timestamp\r\n    ).toString();\r\n  }\r\n\r\n  signTransaction(pk, sk) {\r\n    const privKey = secp256k1.keyFromPrivate(sk);\r\n    if (pk !== this.fromAddress) {\r\n      throw new Error(\"You cannot sign transactions for other wallets!\");\r\n    }\r\n    const hashTx = this.calculateHash();\r\n    const sig = privKey.sign(hashTx, \"base64\");\r\n    this.signature = sig.toDER(\"hex\");\r\n  }\r\n\r\n  isValid() {\r\n    if (this.fromAddress === null) return true;\r\n\r\n    if (!this.signature || this.signature.length === 0) {\r\n      throw new Error(\"No signature in this transaction\");\r\n    }\r\n\r\n    const publicKey = secp256k1.keyFromPublic(this.fromAddress, \"hex\");\r\n    return publicKey.verify(this.calculateHash(), this.signature);\r\n  }\r\n}\r\n\r\nmodule.exports = Transaction;\r\n","const Blockchain = require(\"./Blockchain\");\r\nconst Transaction = require(\"./Transaction\");\r\nconst Block = require(\"./Block\");\r\n\r\nfunction jsonToBlockchain(jsonString, updateChain) {\r\n  const blockchainDec = JSON.parse(jsonString);\r\n  if (blockchainDec.length === 0) {\r\n    return { chain: [] };\r\n  }\r\n  const blockchain = new Blockchain(4, updateChain, blockchainDec[0].timestamp);\r\n  for (const block of blockchainDec) {\r\n    /** Skip genesis block */\r\n    if (block.index === 0) {\r\n      continue;\r\n    }\r\n    const txs = [];\r\n    for (const tx of block.transactions) {\r\n      const curTx = new Transaction(null, null, null);\r\n      curTx.fromAddress = tx.fromAddress;\r\n      curTx.toAddress = tx.toAddress;\r\n      curTx.amount = tx.amount;\r\n      curTx.timestamp = tx.timestamp;\r\n      curTx.signature = tx.signature;\r\n      txs.push(curTx);\r\n    }\r\n    const curBlock = new Block(null, null, null, null);\r\n    curBlock.previousHash = block.previousHash;\r\n    curBlock.timestamp = block.timestamp;\r\n    curBlock.transactions = txs;\r\n    curBlock.nonce = block.nonce;\r\n    curBlock.index = block.index;\r\n    curBlock.hash = block.hash;\r\n    blockchain.chain.push(curBlock);\r\n  }\r\n  return blockchain;\r\n}\r\n\r\nmodule.exports = jsonToBlockchain;\r\n"],"sourceRoot":""}