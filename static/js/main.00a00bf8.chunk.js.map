{"version":3,"sources":["serviceWorker.js","theme.js","components/navigation/Navbar.js","components/wallet/Balance.js","blockchain/generateKeyPair.js","components/wallet/CreateWallet.js","components/utils/HighlightedInformation.js","blockchain/Transaction.js","components/wallet/MakeTransaction.js","components/wallet/Wallet.js","components/utils/BlockPaper.js","components/explorer/Explorer.js","components/mine/Mine.js","blockchain/Block.js","blockchain/Blockchain.js","blockchain/jsonToBlockchain.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","theme","createMuiTheme","palette","primary","main","secondary","contrastThreshold","tonalOffset","typography","useNextVariants","withWidth","withStyles","logo","flexGrow","fontFamily","fontWeight","marginRight","spacing","menuLink","textDecoration","color","common","white","withTheme","props","classes","switchTab","width","AppBar","position","Toolbar","Typography","variant","isWidthDown","className","Button","size","onClick","Balance","coins","pk","checkBalance","blockchain","setState","getBalanceOfAddress","this","paragraph","TextField","value","fullWidth","margin","onChange","event","target","multiline","label","InputProps","readOnly","button","disabled","PureComponent","marginTop","ec","EC","generateKeyPair","key","genKeyPair","getPublic","sk","getPrivate","CreateWallet","createWallet","pair","backgroundColor","border","padding","borderRadius","shape","children","classNames","secp256k1","Transaction","fromAddress","toAddress","amount","timestamp","Date","now","SHA256","toString","privKey","keyFromPrivate","Error","hashTx","calculateHash","sig","sign","signature","toDER","length","keyFromPublic","verify","recPk","status","makeTransaction","transaction","parseInt","signTransaction","addTransaction","e","message","isNaN","HighlightedInformation","highLightedInformation","Wallet","activeMenu","printContent","MakeTransaction","flexBox","rightMargin","contentWrapper","display","bordered","overflowX","hash","prevHash","transactions","index","nonce","style","marginBottom","map","tx","Explorer","page","pageSize","onPaginationChange","_","chain","slicedChain","reverse","slice","pageCount","Math","ceil","Paper","paper","element","Box","mb","previousHash","mt","justifyContent","Pagination","count","defaultPage","Mine","mining","startMining","a","validateChain","minePendingTransactions","curBlock","setTimeout","initMiningLoop","stopMiningLoop","curBlockPaper","Block","txStr","difficulty","maxCounter","counter","substring","Array","join","isValid","Blockchain","updateChain","needsNewBlock","genesisBlock","createGenesisBlock","pendingTransactions","miningReward","miningRewardAddress","rewardTx","txs","i","hasEnoughCoins","push","getLatestBlock","mineBlock","address","balance","block","trans","realGenesis","JSON","stringify","currentBlock","hasValidTransactions","jsonToBlockchain","jsonString","blockchainDec","parse","curTx","App","selectedTab","fetchBlochchain","ajax","XMLHttpRequest","open","onload","responseText","send","copyChain","Promise","resolve","reject","formData","FormData","append","onerror","Grid","container","justify","item","xs","md","leftContent","paperPaddingLeft","maxWidth","paddingLeft","paddingRight","breakpoints","down","ReactDOM","render","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.00a00bf8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nconst primary = \"#b3294e\";\r\nconst secondary = \"#4829B2\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: primary },\r\n    secondary: { main: secondary },\r\n    // Used by `getContrastText()` to maximize the contrast between the background and\r\n    // the text.\r\n    contrastThreshold: 3,\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  isWidthDown,\r\n  withStyles,\r\n  withWidth\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  logo: {\r\n    flexGrow: 1,\r\n    fontFamily: \"Rubik\",\r\n    fontWeight: 700\r\n  },\r\n  marginRight: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  menuLink: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.common.white\r\n  }\r\n});\r\n\r\nfunction Navbar(props) {\r\n  const { classes, switchTab, width } = props;\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography\r\n          variant={isWidthDown(\"sm\", width) ? \"h6\" : \"h5\"}\r\n          color=\"inherit\"\r\n          className={classes.logo}\r\n        >\r\n          Centralia Coin\r\n        </Typography>\r\n        <Button\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          className={classes.marginRight}\r\n          onClick={() => {\r\n            switchTab(\"Wallet\");\r\n          }}\r\n        >\r\n          Wallet\r\n        </Button>\r\n        <Button\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            switchTab(\"Mine\");\r\n          }}\r\n        >\r\n          Mine\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  switchTab: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(Navbar));\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { Typography, TextField, Button, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n});\r\n\r\nclass Balance extends PureComponent {\r\n  state = { coins: \"\", pk: \"\" };\r\n  checkBalance = () => {\r\n    const { blockchain } = this.props;\r\n    const { pk } = this.state;\r\n    this.setState({ coins: blockchain.getBalanceOfAddress(pk) });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, coins } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Enter the public key of a wallet to find out it's balance\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Public Key\"\r\n        />\r\n        <TextField\r\n          value={coins}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"Coins\"\r\n        />\r\n        <Button\r\n          fullWidth\r\n          onClick={this.checkBalance}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          disabled={!pk}\r\n        >\r\n          Check Balance\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Balance);\r\n","import EC from \"elliptic\";\r\nconst ec = new EC.ec(\"secp256k1\");\r\n\r\nfunction generateKeyPair() {\r\n  const key = ec.genKeyPair();\r\n  return { pk: key.getPublic(\"hex\"), sk: key.getPrivate(\"hex\") };\r\n}\r\n\r\nexport default generateKeyPair;\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { Typography, TextField, Button, withStyles } from \"@material-ui/core\";\r\nimport generateKeyPair from \"../../blockchain/generateKeyPair\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n});\r\n\r\nclass CreateWallet extends PureComponent {\r\n  state = { pk: \"\", sk: \"\" };\r\n\r\n  createWallet = () => {\r\n    const pair = generateKeyPair();\r\n    this.setState({ pk: pair.pk, sk: pair.sk });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, sk } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Generate a keypair\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"Public Key\"\r\n        />\r\n        <TextField\r\n          value={sk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"Private Key\"\r\n        />\r\n        <Button\r\n          fullWidth\r\n          onClick={this.createWallet}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n        >\r\n          Generate Wallet\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(CreateWallet);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport classNames from \"classnames\";\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    backgroundColor: \"rgba(253, 200, 69, .2)\",\r\n    border: \"2px solid rgba(253, 200, 69, .4)\",\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n});\r\n\r\nfunction HighlighedInformation(props) {\r\n  const { className, children, classes } = props;\r\n  return (\r\n    <div className={classNames(classes.main, className ? className : null)}>\r\n      <Typography>{children}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHighlighedInformation.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n    PropTypes.array\r\n  ]),\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\r\n","import SHA256 from \"crypto-js/sha256\";\r\nimport EC from \"elliptic\";\r\n\r\nconst secp256k1 = new EC.ec(\"secp256k1\");\r\n\r\nclass Transaction {\r\n  constructor(fromAddress, toAddress, amount) {\r\n    this.fromAddress = fromAddress;\r\n    this.toAddress = toAddress;\r\n    this.amount = amount;\r\n    this.timestamp = Date.now();\r\n  }\r\n\r\n  calculateHash() {\r\n    return SHA256(\r\n      this.fromAddress + this.toAddress + this.amount + this.timestamp\r\n    ).toString();\r\n  }\r\n\r\n  signTransaction(pk, sk) {\r\n    const privKey = secp256k1.keyFromPrivate(sk);\r\n    if (pk !== this.fromAddress) {\r\n      throw new Error(\"You cannot sign transactions for other wallets!\");\r\n    }\r\n    const hashTx = this.calculateHash();\r\n    const sig = privKey.sign(hashTx, \"base64\");\r\n    this.signature = sig.toDER(\"hex\");\r\n  }\r\n\r\n  isValid() {\r\n    if (this.fromAddress === null) return true;\r\n\r\n    if (!this.signature || this.signature.length === 0) {\r\n      throw new Error(\"No signature in this transaction\");\r\n    }\r\n\r\n    const publicKey = secp256k1.keyFromPublic(this.fromAddress, \"hex\");\r\n    return publicKey.verify(this.calculateHash(), this.signature);\r\n  }\r\n}\r\n\r\nexport default Transaction;\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { Typography, TextField, Button, withStyles } from \"@material-ui/core\";\r\nimport HighlightedInformation from \"../utils/HighlightedInformation\";\r\nimport Transaction from \"../../blockchain/Transaction\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  highLightedInformation: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n});\r\n\r\nclass Balance extends PureComponent {\r\n  state = { pk: \"\", sk: \"\", coins: \"\", recPk: \"\", status: null };\r\n\r\n  makeTransaction = () => {\r\n    this.setState({ status: null });\r\n    const { blockchain } = this.props;\r\n    const { pk, recPk, sk, coins } = this.state;\r\n    const transaction = new Transaction(pk, recPk, parseInt(coins));\r\n    try {\r\n      transaction.signTransaction(pk, sk);\r\n      blockchain.addTransaction(transaction);\r\n      this.setState({\r\n        status: \"Transaction will be in the next block if it's valid\"\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      if (\r\n        e.message === \"Cannot add invalid transaction to chain\" ||\r\n        e.message === \"You cannot sign transactions for other wallets!\"\r\n      ) {\r\n        this.setState({ status: e.message });\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, sk, coins, recPk, status } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Transfer coins from one wallet to another\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Your wallets public key\"\r\n        />\r\n        <TextField\r\n          value={sk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ sk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Your wallets private key\"\r\n        />\r\n        <TextField\r\n          value={recPk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ recPk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"The recipient's wallet public key\"\r\n        />\r\n        <TextField\r\n          value={coins}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            const { value } = event.target;\r\n            if (isNaN(value)) {\r\n              return;\r\n            }\r\n            this.setState({ coins: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Coins to send\"\r\n        />\r\n        {status && (\r\n          <HighlightedInformation className={classes.highLightedInformation}>\r\n            {status}\r\n          </HighlightedInformation>\r\n        )}\r\n        <Button\r\n          className={classes.button}\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={!pk || !sk || !recPk || !coins}\r\n          onClick={this.makeTransaction}\r\n        >\r\n          Create Transaction\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Balance);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, withStyles } from \"@material-ui/core\";\r\nimport Balance from \"./Balance\";\r\nimport CreateWallet from \"./CreateWallet\";\r\nimport MakeTransaction from \"./MakeTransaction\";\r\n\r\nconst styles = theme => ({\r\n  flexBox: {\r\n    display: \"flex\"\r\n  },\r\n  rightMargin: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  contentWrapper: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n});\r\n\r\nclass Wallet extends PureComponent {\r\n  state = {\r\n    activeMenu: \"Create Wallet\"\r\n  };\r\n\r\n  printContent = () => {\r\n    const { blockchain } = this.props;\r\n    const { activeMenu } = this.state;\r\n    switch (activeMenu) {\r\n      case \"Create Wallet\":\r\n        return <CreateWallet />;\r\n      case \"Balance\":\r\n        return <Balance blockchain={blockchain} />;\r\n      case \"Make Transaction\":\r\n        return <MakeTransaction blockchain={blockchain} />;\r\n      default:\r\n        throw new Error(\"No branch selected in switcht statement.\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { activeMenu } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.flexBox}>\r\n          <Button\r\n            className={classes.rightMargin}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Create Wallet\" });\r\n            }}\r\n            variant={activeMenu === \"Create Wallet\" ? \"outlined\" : \"text\"}\r\n            color=\"primary\"\r\n          >\r\n            Create Wallet\r\n          </Button>\r\n          <Button\r\n            className={classes.rightMargin}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Balance\" });\r\n            }}\r\n            variant={activeMenu === \"Balance\" ? \"outlined\" : \"text\"}\r\n            color=\"primary\"\r\n          >\r\n            Balance\r\n          </Button>\r\n          <Button\r\n            variant={activeMenu === \"Make Transaction\" ? \"outlined\" : \"text\"}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Make Transaction\" });\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Make Transaction\r\n          </Button>\r\n        </div>\r\n        <div className={classes.contentWrapper}>{this.printContent()}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nWallet.propTypes = {\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Wallet);\r\n","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  bordered: {\r\n    border: \"2px solid rgba(0, 0, 0, 0.13)\",\r\n    overflowX: \"hidden\",\r\n    padding: theme.spacing(1)\r\n  }\r\n});\r\n\r\nfunction BlockPaper(props) {\r\n  const {\r\n    hash,\r\n    prevHash,\r\n    transactions,\r\n    index,\r\n    nonce,\r\n    classes,\r\n    timestamp,\r\n    theme\r\n  } = props;\r\n  return (\r\n    <div className={classes.bordered}>\r\n      <Typography variant=\"body1\">\r\n        <b>Index:</b> {index}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Previous hash:</b> {prevHash}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Hash:</b> {hash}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Nonce:</b> {nonce}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Timestamp:</b> {timestamp}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\"\r\n        style={{\r\n          marginBottom: transactions.length >= 1 ? theme.spacing(1) : 0\r\n        }}\r\n      >\r\n        <b>Transactions:</b>\r\n      </Typography>\r\n      {transactions.map((tx, index) => (\r\n        <div className={classes.bordered} key={index}>\r\n          <Typography>\r\n            <b>From address:</b>{\" \"}\r\n            {tx.fromAddress ? tx.fromAddress : \"Mining reward\"}\r\n          </Typography>\r\n          <Typography>\r\n            <b>To address:</b> {tx.toAddress}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Signature:</b> {tx.signature ? tx.signature : \"Mining reward\"}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Coins:</b> {tx.amount}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Timestamp:</b> {tx.timestamp}\r\n          </Typography>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(BlockPaper);\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport BlockPaper from \"../utils/BlockPaper\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    marginBottom: theme.spacing(4)\r\n  }\r\n});\r\n\r\nclass Explorer extends PureComponent {\r\n  state = { page: 1 };\r\n  pageSize = 10;\r\n\r\n  onPaginationChange = (_, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  render() {\r\n    const { chain, classes } = this.props;\r\n    const { page } = this.state;\r\n    const slicedChain = [...chain]\r\n      .reverse()\r\n      .slice((page - 1) * this.pageSize, page * this.pageSize);\r\n    const pageCount = Math.ceil(chain.length / this.pageSize);\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <Typography paragraph variant=\"h6\">\r\n          The blockchain\r\n        </Typography>\r\n        {slicedChain.map((element, index) => (\r\n          <Box\r\n            mb={index !== slicedChain.length - 1 ? 1 : 0}\r\n            key={element.index}\r\n          >\r\n            <BlockPaper\r\n              index={element.index}\r\n              prevHash={element.previousHash}\r\n              hash={element.hash}\r\n              nonce={element.nonce}\r\n              timestamp={element.timestamp}\r\n              transactions={element.transactions}\r\n            />\r\n            {index !== slicedChain.length - 1 && (\r\n              <Box mt={1} display=\"flex\" justifyContent=\"center\">\r\n                <ArrowUpward></ArrowUpward>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        ))}\r\n        <Box mt={2}>\r\n          <Pagination\r\n            disabled={pageCount === 1}\r\n            count={pageCount}\r\n            defaultPage={1}\r\n            page={page}\r\n            onChange={this.onPaginationChange}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nExplorer.propTypes = {\r\n  chain: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Explorer);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, TextField, Button, withStyles } from \"@material-ui/core\";\r\nimport BlockPaper from \"../utils/BlockPaper\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  curBlockPaper: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n});\r\n\r\nclass Mine extends PureComponent {\r\n  state = { pk: \"\", hash: \"\", mining: false, transactions: [] };\r\n\r\n  startMining = async () => {\r\n    const { blockchain, validateChain } = this.props;\r\n    const { pk, mining } = this.state;\r\n    const minedNewBlock = blockchain.minePendingTransactions(pk);\r\n    if (minedNewBlock) {\r\n      await validateChain();\r\n    }\r\n    const { curBlock } = blockchain;\r\n    this.setState({\r\n      index: curBlock.index,\r\n      prevHash: curBlock.previousHash,\r\n      hash: curBlock.hash,\r\n      nonce: curBlock.nonce,\r\n      timestamp: curBlock.timestamp,\r\n      transactions: curBlock.transactions\r\n    });\r\n    if (mining) {\r\n      window.setTimeout(this.startMining, 10);\r\n    }\r\n  };\r\n\r\n  initMiningLoop = () => {\r\n    this.setState({ mining: true }, this.startMining);\r\n  };\r\n\r\n  stopMiningLoop = () => {\r\n    this.setState({ mining: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const {\r\n      pk,\r\n      mining,\r\n      index,\r\n      prevHash,\r\n      hash,\r\n      nonce,\r\n      timestamp,\r\n      transactions\r\n    } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Mine blocks to get coins\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          multiline\r\n          label=\"Public key of wallet to reward\"\r\n        />\r\n        {mining && (\r\n          <Fragment>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{ marginTop: theme.spacing(1) }}\r\n              paragraph\r\n            >\r\n              Current block\r\n            </Typography>\r\n            <div className={classes.curBlockPaper}>\r\n              <BlockPaper\r\n                index={index}\r\n                hash={hash}\r\n                prevHash={prevHash}\r\n                nonce={nonce}\r\n                timestamp={timestamp}\r\n                transactions={transactions}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n        <Button\r\n          fullWidth\r\n          onClick={mining ? this.stopMiningLoop : this.initMiningLoop}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          disabled={!pk}\r\n        >\r\n          {mining ? \"Stop Mining\" : \"Start Mining\"}\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMine.propTypes = {\r\n  blockchain: PropTypes.object,\r\n  validateChain: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Mine);\r\n","import SHA256 from \"crypto-js/sha256\";\r\n\r\nclass Block {\r\n  constructor(timestamp, transactions, previousHash = \"\", index = 0) {\r\n    this.previousHash = previousHash;\r\n    this.timestamp = timestamp;\r\n    this.transactions = transactions;\r\n    this.nonce = 0;\r\n    this.index = index;\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  calculateHash() {\r\n    let txStr = \"\";\r\n    if (this.transactions) {\r\n      for (const tx of this.transactions) {\r\n        txStr += tx.calculateHash();\r\n      }\r\n    }\r\n    return SHA256(\r\n      this.previousHash + this.timestamp + txStr + this.nonce + this.index\r\n    ).toString();\r\n  }\r\n\r\n  mineBlock(difficulty, maxCounter = false) {\r\n    let counter = 0;\r\n    while (\r\n      this.hash.substring(0, difficulty) !== Array(difficulty + 1).join(\"0\")\r\n    ) {\r\n      if (maxCounter && counter > maxCounter) {\r\n        return false;\r\n      }\r\n      this.nonce++;\r\n      counter++;\r\n      this.hash = this.calculateHash();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  hasValidTransactions() {\r\n    for (const tx of this.transactions) {\r\n      if (!tx.isValid()) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default Block;\r\n","import Transaction from \"./Transaction\";\r\nimport Block from \"./Block\";\r\n\r\nclass Blockchain {\r\n  constructor(difficulty, updateChain = false, timestamp = false) {\r\n    this.updateChain = updateChain;\r\n    const genesisBlock = this.createGenesisBlock(\r\n      timestamp ? timestamp : Date.now()\r\n    );\r\n    if (this.updateChain) {\r\n      this.updateChain([genesisBlock]);\r\n    }\r\n    this.chain = [genesisBlock];\r\n    this.difficulty = difficulty;\r\n    this.pendingTransactions = [];\r\n    this.miningReward = 1000;\r\n  }\r\n\r\n  needsNewBlock = true;\r\n\r\n  createGenesisBlock(timestamp) {\r\n    return new Block(timestamp, [], \"\", 0);\r\n  }\r\n\r\n  getLatestBlock() {\r\n    return this.chain[this.chain.length - 1];\r\n  }\r\n\r\n  minePendingTransactions(miningRewardAddress) {\r\n    const rewardTx = new Transaction(\r\n      null,\r\n      miningRewardAddress,\r\n      this.miningReward\r\n    );\r\n    if (this.needsNewBlock || this.pendingTransactions.length > 0) {\r\n      const txs = [];\r\n      for (var i = 0; i < this.pendingTransactions.length; i++) {\r\n        let tx = this.pendingTransactions[i];\r\n        if (tx.isValid() && this.hasEnoughCoins(tx)) {\r\n          txs.push(tx);\r\n        }\r\n      }\r\n      txs.push(rewardTx);\r\n      this.curBlock = new Block(\r\n        Date.now(),\r\n        txs,\r\n        this.getLatestBlock().hash,\r\n        this.getLatestBlock().index + 1\r\n      );\r\n      this.pendingTransactions = [];\r\n      this.needsNewBlock = false;\r\n    }\r\n    if (!this.curBlock.mineBlock(this.difficulty, 150)) {\r\n      return false;\r\n    }\r\n    this.chain.push(this.curBlock);\r\n    if (this.updateChain) {\r\n      this.updateChain(this.chain);\r\n    }\r\n    this.pendingTransactions = [];\r\n    this.needsNewBlock = true;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Prevent's transactions from wallets which have\r\n   * insufficient coins\r\n   */\r\n  hasEnoughCoins(transaction) {\r\n    if (\r\n      transaction.amount > this.getBalanceOfAddress(transaction.fromAddress)\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addTransaction(transaction) {\r\n    if (!transaction.fromAddress || !transaction.toAddress) {\r\n      throw new Error(\"Transaction must include from and to address\");\r\n    }\r\n\r\n    if (!transaction.isValid()) {\r\n      throw new Error(\"Cannot add invalid transaction to chain\");\r\n    }\r\n\r\n    if (transaction.amount <= 0) {\r\n      throw new Error(\"Transaction amount should be higher than 0\");\r\n    }\r\n\r\n    this.pendingTransactions.push(transaction);\r\n  }\r\n\r\n  getBalanceOfAddress(address) {\r\n    let balance = 0;\r\n\r\n    for (const block of this.chain) {\r\n      for (const trans of block.transactions) {\r\n        if (trans.fromAddress === address) {\r\n          balance -= trans.amount;\r\n        }\r\n\r\n        if (trans.toAddress === address) {\r\n          balance += trans.amount;\r\n        }\r\n      }\r\n    }\r\n\r\n    return balance;\r\n  }\r\n\r\n  getAllTransactionsForWallet(address) {\r\n    const txs = [];\r\n\r\n    for (const block of this.chain) {\r\n      for (const tx of block.transactions) {\r\n        if (tx.fromAddress === address || tx.toAddress === address) {\r\n          txs.push(tx);\r\n        }\r\n      }\r\n    }\r\n\r\n    return txs;\r\n  }\r\n\r\n  isChainValid() {\r\n    const realGenesis = this.createGenesisBlock(this.chain[0].timestamp);\r\n    realGenesis.timestamp = this.chain[0].timestamp;\r\n    if (JSON.stringify(realGenesis) !== JSON.stringify(this.chain[0])) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 1; i < this.chain.length; i++) {\r\n      const currentBlock = this.chain[i];\r\n\r\n      if (!currentBlock.hasValidTransactions()) {\r\n        console.log(\"Invalid transactions\");\r\n        return false;\r\n      }\r\n\r\n      if (currentBlock.hash !== currentBlock.calculateHash()) {\r\n        console.log(\"Invalid hash\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default Blockchain;\r\n","import Blockchain from \"./Blockchain\";\r\nimport Transaction from \"./Transaction\";\r\nimport Block from \"./Block\";\r\n\r\nfunction jsonToBlockchain(jsonString, updateChain) {\r\n  const blockchainDec = JSON.parse(jsonString);\r\n  if (blockchainDec.length === 0) {\r\n    return { chain: [] };\r\n  }\r\n  const blockchain = new Blockchain(4, updateChain, blockchainDec[0].timestamp);\r\n  for (const block of blockchainDec) {\r\n    /** Skip genesis block */\r\n    if (block.index === 0) {\r\n      continue;\r\n    }\r\n    const txs = [];\r\n    for (const tx of block.transactions) {\r\n      const curTx = new Transaction(null, null, null);\r\n      curTx.fromAddress = tx.fromAddress;\r\n      curTx.toAddress = tx.toAddress;\r\n      curTx.amount = tx.amount;\r\n      curTx.timestamp = tx.timestamp;\r\n      curTx.signature = tx.signature;\r\n      txs.push(curTx);\r\n    }\r\n    const curBlock = new Block(null, null, null, null);\r\n    curBlock.previousHash = block.previousHash;\r\n    curBlock.timestamp = block.timestamp;\r\n    curBlock.transactions = txs;\r\n    curBlock.nonce = block.nonce;\r\n    curBlock.index = block.index;\r\n    curBlock.hash = block.hash;\r\n    blockchain.chain.push(curBlock);\r\n  }\r\n  return blockchain;\r\n}\r\n\r\nexport default jsonToBlockchain;\r\n","import React, { Fragment, PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paper, Grid, withStyles } from \"@material-ui/core\";\r\nimport Navbar from \"./components/navigation/Navbar\";\r\nimport Wallet from \"./components/wallet/Wallet\";\r\nimport Explorer from \"./components/explorer/Explorer\";\r\nimport Mine from \"./components/mine/Mine\";\r\nimport jsonToBlockchain from \"./blockchain/jsonToBlockchain\";\r\nimport Blockchain from \"./blockchain/Blockchain\";\r\n\r\nconst styles = theme => ({\r\n  contentWrapper: {\r\n    maxWidth: 1600,\r\n    width: \"100%\",\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    }\r\n  },\r\n  flexBox: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n  paperPaddingLeft: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\"\r\n  },\r\n  leftContent: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginBottom: theme.spacing(3)\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginBottom: theme.spacing(1)\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends PureComponent {\r\n  state = {\r\n    blockchain: null,\r\n    chain: [],\r\n    selectedTab: \"Wallet\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchBlochchain();\r\n  }\r\n\r\n  fetchBlochchain = () => {\r\n    const ajax = new XMLHttpRequest();\r\n    ajax.open(\r\n      \"GET\",\r\n      `https://h2867975.stratoserver.net/centralia-coin/get-blockchain?cb=${Date.now()}`\r\n    );\r\n    ajax.onload = () => {\r\n      const blockchain = jsonToBlockchain(ajax.responseText, this.updateChain);\r\n      if (blockchain.chain.length > 0) {\r\n        console.log(\"valid chain came back\");\r\n        this.setState({ blockchain: blockchain, chain: blockchain.chain });\r\n      } else {\r\n        console.log(\"invalid chain came back\");\r\n        this.setState({\r\n          blockchain: new Blockchain(4, this.updateChain)\r\n        });\r\n      }\r\n    };\r\n    ajax.send();\r\n  };\r\n\r\n  updateChain = chain => {\r\n    const copyChain = [...chain];\r\n    this.setState({ chain: copyChain });\r\n  };\r\n\r\n  validateChain = async () => {\r\n    return new Promise((resolve, reject) => {\r\n      const { chain } = this.state;\r\n      const ajax = new XMLHttpRequest();\r\n      const formData = new FormData();\r\n      formData.append(\"blockchain\", JSON.stringify(chain));\r\n      ajax.open(\r\n        \"POST\",\r\n        \"https://h2867975.stratoserver.net/centralia-coin/add-block\"\r\n      );\r\n      ajax.onload = () => {\r\n        const blockchain = jsonToBlockchain(\r\n          ajax.responseText,\r\n          this.updateChain\r\n        );\r\n        this.setState({ blockchain: blockchain, chain: blockchain.chain });\r\n        resolve();\r\n      };\r\n      ajax.onerror = reject;\r\n      ajax.send(formData);\r\n    });\r\n  };\r\n\r\n  printContent = () => {\r\n    const { selectedTab, blockchain } = this.state;\r\n    switch (selectedTab) {\r\n      case \"Wallet\":\r\n        return <Wallet blockchain={blockchain} />;\r\n      case \"Mine\":\r\n        return (\r\n          <Mine blockchain={blockchain} validateChain={this.validateChain} />\r\n        );\r\n      default:\r\n        throw new Error(\"No branch selected in switch statement\");\r\n    }\r\n  };\r\n\r\n  switchTab = selectedTab => {\r\n    this.setState({ selectedTab });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { chain } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Navbar switchTab={this.switchTab} />\r\n        <div className={classes.flexBox}>\r\n          <div className={classes.contentWrapper}>\r\n            <Grid container justify=\"space-between\">\r\n              <Grid item xs={12} md={7} className={classes.leftContent}>\r\n                <Paper className={classes.paperPaddingLeft}>\r\n                  {this.printContent()}\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Explorer chain={chain} />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}