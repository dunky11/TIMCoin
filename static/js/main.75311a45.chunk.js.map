{"version":3,"sources":["serviceWorker.js","theme.js","components/navigation/Navbar.js","components/utils/PropsRoute.js","timchain/generateKeyPair.js","components/wallet/Wallet.js","components/explorer/Explorer.js","components/mine/Mine.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","secondary","contrastThreshold","tonalOffset","typography","useNextVariants","withStyles","grow","flexGrow","marginRight","spacing","unit","menuLink","textDecoration","color","common","white","withTheme","props","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","className","Link_default","to","Button_default","size","propsRoute","_ref","component","rest","Object","objectWithoutProperties","Route_default","assign","render","routeProps","_len","arguments","length","Array","_key","finalProps","apply","concat","React","renderMergedProps","EC","require","ec","generateKeyPair","key","genKeyPair","pk","getPublic","sk","getPrivate","Wallet","state","activeMenu","publicKey","secretKey","timoshis","balancePubKey","genterateWallet","pair","_this","setState","printContent","_this$state","react","paragraph","TextField_default","value","fullWidth","margin","InputProps","readOnly","multiline","label","onClick","generateKeyButton","onChange","event","target","checkBalance","Error","_this2","this","flexBox","rightMargin","contentWrapper","PureComponent","display","marginTop","Explorer","Mine","withRouter","maxWidth","width","marginLeft","marginRiht","justifyContent","paperPaddingLeft","paddingTop","paddingBottom","paddingLeft","paddingRight","navigation_Navbar","Grid_default","container","justify","item","xs","md","Paper_default","Switch_default","PropsRoute","path","ReactDOM","BrowserRouter_default","MuiThemeProvider_default","href","rel","CssBaseline_default","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75311a45.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst primary = \"#b3294e\";\nconst secondary = \"#4829B2\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: primary },\n    secondary: { main: secondary },\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nexport default theme;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"react-router-dom/Link\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  marginRight: {\n    marginRight: theme.spacing.unit\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.common.white\n  }\n});\n\nfunction Navbar(props) {\n  const { classes } = props;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          TimCOIN\n        </Typography>\n        <Link to=\"/explorer\" className={classes.menuLink}>\n          <Button color=\"inherit\" size=\"large\" className={classes.marginRight}>\n            Explorer\n          </Button>\n        </Link>\n        <Link to=\"/wallet\" className={classes.menuLink}>\n          <Button color=\"inherit\" size=\"large\" className={classes.marginRight}>\n            Wallet\n          </Button>\n        </Link>\n        <Link to=\"/mine\" className={classes.menuLink}>\n          <Button color=\"inherit\" size=\"large\">\n            Mine\n          </Button>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Navbar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Route from \"react-router-dom/Route\";\n\n/**\n * Helper function to use react-router with props\n * taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Function to use react-router with props\n * taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst propsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\npropsRoute.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n    PropTypes.array\n  ])\n};\n\nexport default propsRoute;\n","var EC = require(\"elliptic\").ec;\n\nfunction generateKeyPair() {\n  const ec = new EC(\"secp256k1\");\n  const key = ec.genKeyPair();\n  return { pk: key.getPublic(\"hex\"), sk: key.getPrivate(\"hex\") };\n}\n\nexport default generateKeyPair;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport generateKeyPair from \"../../timchain/generateKeyPair\";\n\nconst styles = theme => ({\n  flexBox: {\n    display: \"flex\"\n  },\n  rightMargin: {\n    marginRight: theme.spacing.unit\n  },\n  contentWrapper: {\n    marginTop: theme.spacing.unit * 3\n  },\n  generateKeyButton: {\n    marginTop: theme.spacing.unit * 4\n  }\n});\n\nclass Wallet extends PureComponent {\n  state = {\n    activeMenu: \"Create Wallet\",\n    publicKey: \"\",\n    secretKey: \"\",\n    timoshis: \"\",\n    balancePubKey: \"\"\n  };\n\n  genterateWallet = () => {\n    const pair = generateKeyPair();\n    this.setState({ publicKey: pair.pk, secretKey: pair.sk });\n  };\n\n  printContent = () => {\n    const { classes } = this.props;\n    const {\n      activeMenu,\n      publicKey,\n      secretKey,\n      timoshis,\n      balancePubKey\n    } = this.state;\n    switch (activeMenu) {\n      case \"Create Wallet\":\n        return (\n          <Fragment>\n            <Typography paragraph variant=\"h6\">\n              Generate a keypair using secp256k1\n            </Typography>\n            <TextField\n              value={publicKey}\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              InputProps={{\n                readOnly: true\n              }}\n              multiline\n              label=\"Public Key\"\n            />\n            <TextField\n              value={secretKey}\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              InputProps={{\n                readOnly: true\n              }}\n              multiline\n              label=\"Private Key\"\n            />\n            <Button\n              fullWidth\n              onClick={this.genterateWallet}\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.generateKeyButton}\n            >\n              Generate Wallet\n            </Button>\n          </Fragment>\n        );\n      case \"Balance\":\n        return (\n          <Fragment>\n            <Typography paragraph variant=\"h6\">\n              Enter the public key of a wallet to find out it's timoshis\n            </Typography>\n            <TextField\n              value={balancePubKey}\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              onChange={event => {\n                this.setState({ balancePubKey: event.target.value });\n              }}\n              multiline\n              label=\"Public Key\"\n            />\n            <TextField\n              value={timoshis}\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              InputProps={{\n                readOnly: true\n              }}\n              multiline\n              label=\"timoshis\"\n            />\n            <Button\n              fullWidth\n              onClick={this.checkBalance}\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.generateKeyButton}\n            >\n              Check Balance\n            </Button>\n          </Fragment>\n        );\n      case \"Make Transaktion\":\n        return;\n      default:\n        throw new Error(\"No branch selected in switcht statement.\");\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { activeMenu } = this.state;\n    return (\n      <Fragment>\n        <div className={classes.flexBox}>\n          <Button\n            className={classes.rightMargin}\n            onClick={() => {\n              this.setState({ activeMenu: \"Create Wallet\" });\n            }}\n            variant={activeMenu === \"Create Wallet\" ? \"outlined\" : \"text\"}\n            color=\"primary\"\n          >\n            Create Wallet\n          </Button>\n          <Button\n            className={classes.rightMargin}\n            onClick={() => {\n              this.setState({ activeMenu: \"Balance\" });\n            }}\n            variant={activeMenu === \"Balance\" ? \"outlined\" : \"text\"}\n            color=\"primary\"\n          >\n            Balance\n          </Button>\n          <Button\n            variant={activeMenu === \"Make Transaktion\" ? \"outlined\" : \"text\"}\n            onClick={() => {\n              this.setState({ activeMenu: \"Make Transaktion\" });\n            }}\n            color=\"primary\"\n          >\n            Make Transaktion\n          </Button>\n        </div>\n        <div className={classes.contentWrapper}>{this.printContent()}</div>\n      </Fragment>\n    );\n  }\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(Wallet);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Explorer extends PureComponent {\n  state = {};\n  render() {\n    return <div>Explorer</div>;\n  }\n}\n\nExplorer.propTypes = {};\n\nexport default Explorer;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Mine extends PureComponent {\n  state = {};\n  render() {\n    return <div>Mine</div>;\n  }\n}\n\nMine.propTypes = {};\n\nexport default Mine;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Switch from \"react-router-dom/Switch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withRouter from \"react-router-dom/withRouter\";\nimport Navbar from \"./components/navigation/Navbar\";\nimport PropsRoute from \"./components/utils/PropsRoute\";\nimport Wallet from \"./components/wallet/Wallet\";\nimport Explorer from \"./components/explorer/Explorer\";\nimport Mine from \"./components/mine/Mine\";\n\nconst styles = theme => ({\n  contentWrapper: {\n    maxWidth: 1400,\n    width: \"100%\",\n    marginLeft: theme.spacing.unit,\n    marginRiht: theme.spacing.unit\n  },\n  flexBox: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  paperPaddingLeft: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n    width: \"100%\"\n  }\n});\n\nfunction App(props) {\n  const { location, classes } = props;\n  return (\n    <Fragment>\n      <Navbar />\n      <div className={classes.flexBox}>\n        <div className={classes.contentWrapper}>\n          <Grid container justify=\"space-between\">\n            <Grid item xs={12} md={7}>\n              <Paper className={classes.paperPaddingLeft}>\n                <Switch>\n                  <PropsRoute\n                    location={location}\n                    path=\"/wallet\"\n                    component={Wallet}\n                  />\n                  <PropsRoute\n                    location={location}\n                    path=\"/mine\"\n                    component={Mine}\n                  />\n                  <PropsRoute\n                    location={location}\n                    path=\"\"\n                    component={Explorer}\n                  />\n                </Switch>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Paper className={classes.fullWidth}>Hallo Welt!</Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(App));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport BrowserRouter from \"react-router-dom/BrowserRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport theme from \"./theme\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <MuiThemeProvider theme={theme}>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Baloo+Bhaijaan|Roboto:300,400,500\"\n        rel=\"stylesheet\"\n      />\n      <CssBaseline />\n      <App />\n    </MuiThemeProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}