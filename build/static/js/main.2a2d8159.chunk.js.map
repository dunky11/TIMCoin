{"version":3,"sources":["serviceWorker.js","theme.js","components/navigation/Navbar.js","components/wallet/Balance.js","timchain/generateKeyPair.js","components/wallet/CreateWallet.js","timchain/Transaction.js","components/utils/HighlightedInformation.js","components/wallet/MakeTransaction.js","components/wallet/Wallet.js","components/utils/TimBlockPaper.js","components/explorer/Explorer.js","components/mine/Mine.js","timchain/Block.js","timchain/TimChain.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","secondary","contrastThreshold","tonalOffset","typography","useNextVariants","withStyles","grow","flexGrow","marginRight","spacing","unit","menuLink","textDecoration","color","common","white","withTheme","props","classes","switchTab","AppBar","position","Toolbar","Typography","variant","className","Button","size","onClick","Balance","state","timoshis","pk","checkBalance","timChain","setState","getBalanceOfAddress","this","paragraph","TextField","value","fullWidth","margin","onChange","event","target","multiline","label","InputProps","readOnly","button","disabled","PureComponent","marginTop","EC","require","ec","generateKeyPair","key","genKeyPair","getPublic","sk","getPrivate","CreateWallet","createWallet","pair","Transaction","fromAddress","toAddress","amount","timestamp","Date","now","SHA256","toString","privKey","keyFromPrivate","Error","hashTx","calculateHash","sig","sign","signature","toDER","length","keyFromPublic","verify","backgroundColor","border","padding","borderRadius","shape","children","classNames","recPk","status","makeTransaction","transaction","parseInt","signTransaction","addTransaction","e","console","log","message","isNaN","HighlightedInformation","highLightedInformation","Wallet","activeMenu","printContent","MakeTransaction","flexBox","rightMargin","contentWrapper","display","paper","overflowX","transactionPaper","hash","prevHash","transactions","index","nonce","Paper","map","element","square","elevation","Explorer","chain","marginBottom","previousHash","Mine","mining","startMining","minePendingTransactions","curBlock","setTimeout","initMiningLoop","stopMiningLoop","curBlockPaper","Block","JSON","stringify","difficulty","maxCounter","counter","substring","Array","join","isValid","TimChain","updateChain","needsNewBlock","genesisBlock","createGenesisBlock","pendingTransactions","miningReward","miningRewardAddress","rewardTx","i","hasEnoughTimoshis","push","getLatestBlock","mineBlock","address","balance","block","trans","txs","tx","currentBlock","hasValidTransactions","App","selectedTab","copyChain","Grid","container","justify","item","xs","md","paperPaddingLeft","explorerPaper","maxWidth","width","marginLeft","marginRiht","justifyContent","paddingTop","paddingBottom","paddingLeft","paddingRight","ReactDOM","render","href","rel","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a2d8159.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nconst primary = \"#b3294e\";\r\nconst secondary = \"#4829B2\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: primary },\r\n    secondary: { main: secondary },\r\n    // Used by `getContrastText()` to maximize the contrast between the background and\r\n    // the text.\r\n    contrastThreshold: 3,\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  marginRight: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  menuLink: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.common.white\r\n  }\r\n});\r\n\r\nfunction Navbar(props) {\r\n  const { classes, switchTab } = props;\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n          <b>TimCOIN</b> - The not so decentralized cryptocurrency\r\n        </Typography>\r\n        <Button\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          className={classes.marginRight}\r\n          onClick={() => {\r\n            switchTab(\"Wallet\");\r\n          }}\r\n        >\r\n          Wallet\r\n        </Button>\r\n        <Button\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            switchTab(\"Mine\");\r\n          }}\r\n        >\r\n          Mine\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  switchTab: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Navbar);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing.unit * 4\r\n  }\r\n});\r\n\r\nclass Balance extends PureComponent {\r\n  state = { timoshis: \"\", pk: \"\" };\r\n  checkBalance = () => {\r\n    const { timChain } = this.props;\r\n    const { pk } = this.state;\r\n    this.setState({ timoshis: timChain.getBalanceOfAddress(pk) });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, timoshis } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Enter the public key of a wallet to find out it's timoshis\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Public Key\"\r\n        />\r\n        <TextField\r\n          value={timoshis}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"timoshis\"\r\n        />\r\n        <Button\r\n          fullWidth\r\n          onClick={this.checkBalance}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          disabled={!pk}\r\n        >\r\n          Check Balance\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Balance);\r\n","var EC = require(\"elliptic\").ec;\r\n\r\nfunction generateKeyPair() {\r\n  const ec = new EC(\"secp256k1\");\r\n  const key = ec.genKeyPair();\r\n  return { pk: key.getPublic(\"hex\"), sk: key.getPrivate(\"hex\") };\r\n}\r\n\r\nexport default generateKeyPair;\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport generateKeyPair from \"../../timchain/generateKeyPair\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing.unit * 4\r\n  }\r\n});\r\n\r\nclass CreateWallet extends PureComponent {\r\n  state = { pk: \"\", sk: \"\" };\r\n\r\n  createWallet = () => {\r\n    const pair = generateKeyPair();\r\n    this.setState({ pk: pair.pk, sk: pair.sk });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, sk } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Generate a keypair using secp256k1\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"Public Key\"\r\n        />\r\n        <TextField\r\n          value={sk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n          multiline\r\n          label=\"Private Key\"\r\n        />\r\n        <Button\r\n          fullWidth\r\n          onClick={this.createWallet}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n        >\r\n          Generate Wallet\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(CreateWallet);\r\n","import SHA256 from \"crypto-js/sha256\";\r\nconst EC = require(\"elliptic\").ec;\r\nconst ec = new EC(\"secp256k1\");\r\n\r\nclass Transaction {\r\n  constructor(fromAddress, toAddress, amount) {\r\n    this.fromAddress = fromAddress;\r\n    this.toAddress = toAddress;\r\n    this.amount = amount;\r\n    this.timestamp = Date.now();\r\n  }\r\n\r\n  calculateHash() {\r\n    return SHA256(\r\n      this.fromAddress + this.toAddress + this.amount + this.timestamp\r\n    ).toString();\r\n  }\r\n\r\n  signTransaction(pk, sk) {\r\n    const privKey = ec.keyFromPrivate(sk);\r\n    if (pk !== this.fromAddress) {\r\n      throw new Error(\"You cannot sign transactions for other wallets!\");\r\n    }\r\n    const hashTx = this.calculateHash();\r\n    const sig = privKey.sign(hashTx, \"base64\");\r\n    this.signature = sig.toDER(\"hex\");\r\n  }\r\n\r\n  isValid() {\r\n    if (this.fromAddress === null) return true;\r\n\r\n    if (!this.signature || this.signature.length === 0) {\r\n      throw new Error(\"No signature in this transaction\");\r\n    }\r\n\r\n    const publicKey = ec.keyFromPublic(this.fromAddress, \"hex\");\r\n    return publicKey.verify(this.calculateHash(), this.signature);\r\n  }\r\n}\r\n\r\nexport default Transaction;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport classNames from \"classnames\";\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    backgroundColor: \"rgba(253, 200, 69, .2)\",\r\n    border: \"2px solid rgba(253, 200, 69, .4)\",\r\n    padding: theme.spacing.unit * 2,\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n});\r\n\r\nfunction HighlighedInformation(props) {\r\n  const { className, children, classes } = props;\r\n  return (\r\n    <div className={classNames(classes.main, className ? className : null)}>\r\n      <Typography>{children}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHighlighedInformation.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n    PropTypes.array\r\n  ]),\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Transaction from \"../../timchain/Transaction\";\r\nimport HighlightedInformation from \"../utils/HighlightedInformation\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing.unit * 4\r\n  },\r\n  highLightedInformation: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass Balance extends PureComponent {\r\n  state = { pk: \"\", sk: \"\", timoshis: \"\", recPk: \"\", status: null };\r\n  makeTransaction = () => {\r\n    this.setState({ status: null });\r\n    const { timChain } = this.props;\r\n    const { pk, recPk, sk, timoshis } = this.state;\r\n    const transaction = new Transaction(pk, recPk, parseInt(timoshis));\r\n    try {\r\n      transaction.signTransaction(pk, sk);\r\n      timChain.addTransaction(transaction);\r\n      this.setState({\r\n        status: \"Transaction will be in the next block if it's valid\"\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      if (\r\n        e.message === \"Cannot add invalid transaction to chain\" ||\r\n        e.message === \"You cannot sign transactions for other wallets!\"\r\n      ) {\r\n        this.setState({ status: e.message });\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { pk, sk, timoshis, recPk, status } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Transfer timoshis from one wallet to another\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Your wallets public key\"\r\n        />\r\n        <TextField\r\n          value={sk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ sk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Your wallets private key\"\r\n        />\r\n        <TextField\r\n          value={recPk}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            this.setState({ recPk: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"The recipient's wallet public key\"\r\n        />\r\n        <TextField\r\n          value={timoshis}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            const { value } = event.target;\r\n            if (isNaN(value)) {\r\n              return;\r\n            }\r\n            this.setState({ timoshis: event.target.value });\r\n          }}\r\n          multiline\r\n          label=\"Timoshis to send\"\r\n        />\r\n        {status && (\r\n          <HighlightedInformation className={classes.highLightedInformation}>\r\n            {status}\r\n          </HighlightedInformation>\r\n        )}\r\n        <Button\r\n          className={classes.button}\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={!pk || !sk || !recPk || !timoshis}\r\n          onClick={this.makeTransaction}\r\n        >\r\n          Create Transaction\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Balance);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Balance from \"./Balance\";\r\nimport CreateWallet from \"./CreateWallet\";\r\nimport MakeTransaction from \"./MakeTransaction\";\r\n\r\nconst styles = theme => ({\r\n  flexBox: {\r\n    display: \"flex\"\r\n  },\r\n  rightMargin: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  contentWrapper: {\r\n    marginTop: theme.spacing.unit * 3\r\n  }\r\n});\r\n\r\nclass Wallet extends PureComponent {\r\n  state = {\r\n    activeMenu: \"Create Wallet\"\r\n  };\r\n\r\n  printContent = () => {\r\n    const { timChain } = this.props;\r\n    const { activeMenu } = this.state;\r\n    switch (activeMenu) {\r\n      case \"Create Wallet\":\r\n        return <CreateWallet />;\r\n      case \"Balance\":\r\n        return <Balance timChain={timChain} />;\r\n      case \"Make Transaction\":\r\n        return <MakeTransaction timChain={timChain} />;\r\n      default:\r\n        throw new Error(\"No branch selected in switcht statement.\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { activeMenu } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.flexBox}>\r\n          <Button\r\n            className={classes.rightMargin}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Create Wallet\" });\r\n            }}\r\n            variant={activeMenu === \"Create Wallet\" ? \"outlined\" : \"text\"}\r\n            color=\"primary\"\r\n          >\r\n            Create Wallet\r\n          </Button>\r\n          <Button\r\n            className={classes.rightMargin}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Balance\" });\r\n            }}\r\n            variant={activeMenu === \"Balance\" ? \"outlined\" : \"text\"}\r\n            color=\"primary\"\r\n          >\r\n            Balance\r\n          </Button>\r\n          <Button\r\n            variant={activeMenu === \"Make Transaction\" ? \"outlined\" : \"text\"}\r\n            onClick={() => {\r\n              this.setState({ activeMenu: \"Make Transaction\" });\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Make Transaction\r\n          </Button>\r\n        </div>\r\n        <div className={classes.contentWrapper}>{this.printContent()}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nWallet.propTypes = {\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Wallet);\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    overflowX: \"hidden\"\r\n  },\r\n  transactionPaper: {\r\n    padding: theme.spacing.unit,\r\n    overflowX: \"hidden\",\r\n    marginTop: theme.spacing.unit\r\n  }\r\n});\r\n\r\nfunction TimBlockPaper(props) {\r\n  const {\r\n    hash,\r\n    prevHash,\r\n    transactions,\r\n    index,\r\n    nonce,\r\n    classes,\r\n    timestamp\r\n  } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"body1\">\r\n        <b>Index:</b> {index}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Previous hash:</b> {prevHash}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Hash:</b> {hash}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Nonce:</b> {nonce}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Timestamp:</b> {timestamp}\r\n      </Typography>\r\n      <Typography variant=\"body1\">\r\n        <b>Transactions:</b>\r\n      </Typography>\r\n      {transactions.map(element => (\r\n        <Paper\r\n          key={element.index}\r\n          className={classes.transactionPaper}\r\n          square\r\n          elevation={1}\r\n        >\r\n          <Typography>\r\n            <b>From address:</b>{\" \"}\r\n            {element.fromAddress\r\n              ? element.fromAddress\r\n              : \"Mining rewards have no address of sender\"}\r\n          </Typography>\r\n          <Typography>\r\n            <b>To address:</b> {element.toAddress}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Signature:</b>{\" \"}\r\n            {element.signature\r\n              ? element.signature\r\n              : \"Mining rewards have no signature\"}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Timoshis:</b> {element.amount}\r\n          </Typography>\r\n          <Typography>\r\n            <b>Timestamp:</b> {element.timestamp}\r\n          </Typography>\r\n        </Paper>\r\n      ))}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(TimBlockPaper);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TimBlockPaper from \"../utils/TimBlockPaper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst styles = theme => ({\r\n  marginBottom: {\r\n    marginBottom: theme.spacing.unit\r\n  }\r\n});\r\n\r\nclass Explorer extends PureComponent {\r\n  state = {};\r\n  render() {\r\n    const { chain, classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"body1\">\r\n          <b>The blockchain</b>\r\n        </Typography>\r\n        {chain.map((element, index) => (\r\n          <div\r\n            className={index !== chain.length - 1 ? classes.marginBottom : null}\r\n            key={element.timestamp}\r\n          >\r\n            <TimBlockPaper\r\n              index={element.index}\r\n              prevHash={element.previousHash}\r\n              hash={element.hash}\r\n              nonce={element.nonce}\r\n              timestamp={element.timestamp}\r\n              transactions={element.transactions}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nExplorer.propTypes = {\r\n  chain: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Explorer);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TimBlockPaper from \"../utils/TimBlockPaper\";\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing.unit * 4\r\n  },\r\n  curBlockPaper: {\r\n    marginTop: theme.spacing.unit\r\n  }\r\n});\r\n\r\nclass Mine extends PureComponent {\r\n  state = { pk: \"\", hash: \"\", mining: false, transactions: [] };\r\n  startMining = () => {\r\n    const { timChain } = this.props;\r\n    const { pk, mining } = this.state;\r\n    if (mining) {\r\n      timChain.minePendingTransactions(pk);\r\n      const { curBlock } = timChain;\r\n      this.setState({\r\n        index: curBlock.index,\r\n        prevHash: curBlock.previousHash,\r\n        hash: curBlock.hash,\r\n        nonce: curBlock.nonce,\r\n        timestamp: curBlock.timestamp,\r\n        transactions: curBlock.transactions\r\n      });\r\n      window.setTimeout(this.startMining, 10);\r\n    }\r\n  };\r\n  initMiningLoop = () => {\r\n    this.setState({ mining: true }, this.startMining);\r\n  };\r\n  stopMiningLoop = () => {\r\n    this.setState({ mining: false });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      pk,\r\n      mining,\r\n      index,\r\n      prevHash,\r\n      hash,\r\n      nonce,\r\n      timestamp,\r\n      transactions\r\n    } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Typography paragraph variant=\"h6\">\r\n          Mine blocks to get timoshis\r\n        </Typography>\r\n        <TextField\r\n          value={pk}\r\n          onChange={event => {\r\n            this.setState({ pk: event.target.value });\r\n          }}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          multiline\r\n          label=\"Public key of wallet to reward\"\r\n        />\r\n        {mining && (\r\n          <div className={classes.curBlockPaper}>\r\n            <TimBlockPaper\r\n              index={index}\r\n              hash={hash}\r\n              prevHash={prevHash}\r\n              nonce={nonce}\r\n              timestamp={timestamp}\r\n              transactions={transactions}\r\n            />\r\n          </div>\r\n        )}\r\n        <Button\r\n          fullWidth\r\n          onClick={mining ? this.stopMiningLoop : this.initMiningLoop}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          disabled={!pk}\r\n        >\r\n          {mining ? \"Stop Mining\" : \"Start Mining\"}\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMine.propTypes = { timChain: PropTypes.object };\r\n\r\nexport default withStyles(styles, { withTheme: true })(Mine);\r\n","import SHA256 from \"crypto-js/sha256\";\r\n\r\nclass Block {\r\n  constructor(timestamp, transactions, previousHash = \"\", index = 0) {\r\n    this.previousHash = previousHash;\r\n    this.timestamp = timestamp;\r\n    this.transactions = transactions;\r\n    this.nonce = 0;\r\n    this.index = index;\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  calculateHash() {\r\n    return SHA256(\r\n      this.previousHash +\r\n        this.timestamp +\r\n        JSON.stringify(this.transactions) +\r\n        this.nonce +\r\n        this.index\r\n    ).toString();\r\n  }\r\n\r\n  mineBlock(difficulty, maxCounter = false) {\r\n    let counter = 0;\r\n    while (\r\n      this.hash.substring(0, difficulty) !== Array(difficulty + 1).join(\"0\")\r\n    ) {\r\n      if (maxCounter && counter > maxCounter) {\r\n        return false;\r\n      }\r\n      this.nonce++;\r\n      counter++;\r\n      this.hash = this.calculateHash();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  hasValidTransactions() {\r\n    for (const transaction of this.transactions) {\r\n      if (!transaction.isValid()) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default Block;\r\n","import Transaction from \"./Transaction\";\r\nimport Block from \"./Block\";\r\n\r\nclass TimChain {\r\n  constructor(difficulty, updateChain = false) {\r\n    this.updateChain = updateChain;\r\n    const genesisBlock = this.createGenesisBlock();\r\n    if (this.updateChain) {\r\n      this.updateChain([genesisBlock]);\r\n    }\r\n    this.chain = [genesisBlock];\r\n    this.difficulty = difficulty;\r\n    this.pendingTransactions = [];\r\n    this.miningReward = 1000;\r\n  }\r\n\r\n  needsNewBlock = true;\r\n\r\n  createGenesisBlock() {\r\n    return new Block(\r\n      Date.now(),\r\n      [],\r\n      \"Im the genesis block, i got no\tpredecessor\",\r\n      0\r\n    );\r\n  }\r\n\r\n  getLatestBlock() {\r\n    return this.chain[this.chain.length - 1];\r\n  }\r\n\r\n  minePendingTransactions(miningRewardAddress) {\r\n    const rewardTx = new Transaction(\r\n      null,\r\n      miningRewardAddress,\r\n      this.miningReward\r\n    );\r\n    if (this.needsNewBlock || this.pendingTransactions.length > 0) {\r\n      const transactions = [];\r\n      for (var i = 0; i < this.pendingTransactions.length; i++) {\r\n        let transaction = this.pendingTransactions[i];\r\n        if (transaction.isValid() && this.hasEnoughTimoshis(transaction)) {\r\n          transactions.push(transaction);\r\n        }\r\n      }\r\n      transactions.push(rewardTx);\r\n      this.curBlock = new Block(\r\n        Date.now(),\r\n        transactions,\r\n        this.getLatestBlock().hash,\r\n        this.getLatestBlock().index + 1\r\n      );\r\n      this.pendingTransactions = [];\r\n      this.needsNewBlock = false;\r\n    }\r\n    if (!this.curBlock.mineBlock(this.difficulty, 150)) {\r\n      return false;\r\n    }\r\n    this.chain.push(this.curBlock);\r\n    if (this.updateChain) {\r\n      this.updateChain(this.chain);\r\n    }\r\n    this.pendingTransactions = [];\r\n    this.needsNewBlock = true;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Prevent's transactions from wallets which have\r\n   * insufficient timoshis\r\n   */\r\n  hasEnoughTimoshis(transaction) {\r\n    if (\r\n      transaction.amount > this.getBalanceOfAddress(transaction.fromAddress)\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addTransaction(transaction) {\r\n    if (!transaction.fromAddress || !transaction.toAddress) {\r\n      throw new Error(\"Transaction must include from and to address\");\r\n    }\r\n\r\n    if (!transaction.isValid()) {\r\n      throw new Error(\"Cannot add invalid transaction to chain\");\r\n    }\r\n\r\n    if (transaction.amount <= 0) {\r\n      throw new Error(\"Transaction amount should be higher than 0\");\r\n    }\r\n\r\n    this.pendingTransactions.push(transaction);\r\n  }\r\n\r\n  getBalanceOfAddress(address) {\r\n    let balance = 0;\r\n\r\n    for (const block of this.chain) {\r\n      for (const trans of block.transactions) {\r\n        if (trans.fromAddress === address) {\r\n          balance -= trans.amount;\r\n        }\r\n\r\n        if (trans.toAddress === address) {\r\n          balance += trans.amount;\r\n        }\r\n      }\r\n    }\r\n\r\n    return balance;\r\n  }\r\n\r\n  getAllTransactionsForWallet(address) {\r\n    const txs = [];\r\n\r\n    for (const block of this.chain) {\r\n      for (const tx of block.transactions) {\r\n        if (tx.fromAddress === address || tx.toAddress === address) {\r\n          txs.push(tx);\r\n        }\r\n      }\r\n    }\r\n\r\n    return txs;\r\n  }\r\n\r\n  isChainValid() {\r\n    const realGenesis = JSON.stringify(this.createGenesisBlock());\r\n\r\n    if (realGenesis !== JSON.stringify(this.chain[0])) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 1; i < this.chain.length; i++) {\r\n      const currentBlock = this.chain[i];\r\n\r\n      if (!currentBlock.hasValidTransactions()) {\r\n        return false;\r\n      }\r\n\r\n      if (currentBlock.hash !== currentBlock.calculateHash()) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default TimChain;\r\n","import React, { Fragment, PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Navbar from \"./components/navigation/Navbar\";\r\nimport Wallet from \"./components/wallet/Wallet\";\r\nimport Explorer from \"./components/explorer/Explorer\";\r\nimport Mine from \"./components/mine/Mine\";\r\nimport TimChain from \"./timchain/TimChain\";\r\n\r\nconst styles = theme => ({\r\n  contentWrapper: {\r\n    maxWidth: 1400,\r\n    width: \"100%\",\r\n    marginLeft: theme.spacing.unit,\r\n    marginRiht: theme.spacing.unit\r\n  },\r\n  flexBox: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n  paperPaddingLeft: {\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    paddingLeft: theme.spacing.unit * 3,\r\n    paddingRight: theme.spacing.unit * 3,\r\n    width: \"100%\"\r\n  },\r\n  explorerPaper: {\r\n    padding: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 4\r\n  }\r\n});\r\n\r\nclass App extends PureComponent {\r\n  state = { timChain: null, chain: [], selectedTab: \"Wallet\" };\r\n\r\n  updateChain = chain => {\r\n    const copyChain = [...chain];\r\n    this.setState({ chain: copyChain });\r\n  };\r\n\r\n  printContent = () => {\r\n    const { selectedTab, timChain } = this.state;\r\n    switch (selectedTab) {\r\n      case \"Wallet\":\r\n        return <Wallet timChain={timChain} />;\r\n      case \"Mine\":\r\n        return <Mine timChain={timChain} />;\r\n      default:\r\n        throw new Error(\"No branch selected in switch statement\");\r\n    }\r\n  };\r\n\r\n  switchTab = selectedTab => {\r\n    this.setState({ selectedTab });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const timChain = new TimChain(4, this.updateChain);\r\n    this.setState({ timChain });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { chain } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Navbar switchTab={this.switchTab} />\r\n        <div className={classes.flexBox}>\r\n          <div className={classes.contentWrapper}>\r\n            <Grid container justify=\"space-between\">\r\n              <Grid item xs={12} md={7}>\r\n                <Paper className={classes.paperPaddingLeft}>\r\n                  {this.printContent()}\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Paper className={classes.explorerPaper}>\r\n                  <Explorer chain={chain} />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\r\nimport theme from \"./theme\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <link\r\n      href=\"https://fonts.googleapis.com/css?family=Baloo+Bhaijaan|Roboto:300,400,500\"\r\n      rel=\"stylesheet\"\r\n    />\r\n    <CssBaseline />\r\n    <App />\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}